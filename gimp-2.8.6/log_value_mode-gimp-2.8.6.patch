diff --git a/app/tools/gimpinkoptions-gui.c b/app/tools/gimpinkoptions-gui.c
index 6daba3b..b457b06 100644
--- a/app/tools/gimpinkoptions-gui.c
+++ b/app/tools/gimpinkoptions-gui.c
@@ -29,6 +29,7 @@
 
 #include "widgets/gimpblobeditor.h"
 #include "widgets/gimppropwidgets.h"
+#include "widgets/gimpspinscale.h"
 
 #include "gimpinkoptions-gui.h"
 #include "gimppaintoptions-gui.h"
@@ -63,6 +64,7 @@ gimp_ink_options_gui (GimpToolOptions *tool_options)
   scale = gimp_prop_spin_scale_new (config, "size",
                                     _("Size"),
                                     1.0, 2.0, 1);
+  gimp_spin_scale_set_log_mode (GIMP_SPIN_SCALE (scale), TRUE);
   gtk_box_pack_start (GTK_BOX (vbox2), scale, FALSE, FALSE, 0);
   gtk_widget_show (scale);
 
diff --git a/app/tools/gimppaintoptions-gui.c b/app/tools/gimppaintoptions-gui.c
index 9ba8f74..91cdf4b 100644
--- a/app/tools/gimppaintoptions-gui.c
+++ b/app/tools/gimppaintoptions-gui.c
@@ -134,6 +134,7 @@ gimp_paint_options_gui (GimpToolOptions *tool_options)
                                         _("Size"),
                                         1.0, 10.0, 2);
       gimp_spin_scale_set_scale_limits (GIMP_SPIN_SCALE (scale), 1.0, 1000.0);
+      gimp_spin_scale_set_log_mode (GIMP_SPIN_SCALE (scale), TRUE);
       gtk_box_pack_start (GTK_BOX (hbox), scale, TRUE, TRUE, 0);
       gtk_widget_show (scale);
 
diff --git a/app/widgets/gimpspinscale.c b/app/widgets/gimpspinscale.c
index 16aa3df..7edf13c 100644
--- a/app/widgets/gimpspinscale.c
+++ b/app/widgets/gimpspinscale.c
@@ -23,6 +23,8 @@
 #include <gtk/gtk.h>
 
 #include "libgimpwidgets/gimpwidgets.h"
+#include "libgimpbase/gimpbase.h"
+#include "libgimpmath/gimpmath.h"
 
 #include "widgets-types.h"
 
@@ -60,6 +62,8 @@ struct _GimpSpinScalePrivate
   gboolean     relative_change;
   gdouble      start_x;
   gdouble      start_value;
+
+  gboolean     log_mode;
 };
 
 #define GET_PRIVATE(obj) (G_TYPE_INSTANCE_GET_PRIVATE ((obj), \
@@ -493,6 +497,7 @@ gimp_spin_scale_change_value (GtkWidget *widget,
   gdouble               upper;
   gint                  width;
   gdouble               value;
+  gboolean              log_mode;
 
   gimp_spin_scale_get_limits (GIMP_SPIN_SCALE (widget), &lower, &upper);
 
@@ -501,6 +506,8 @@ gimp_spin_scale_change_value (GtkWidget *widget,
   if (gtk_widget_get_direction (widget) == GTK_TEXT_DIR_RTL)
     x = width - x;
 
+  log_mode = gimp_spin_scale_check_log_mode (GIMP_SPIN_SCALE (spin_button));
+
   if (private->relative_change)
     {
       gdouble diff;
@@ -513,7 +520,14 @@ gimp_spin_scale_change_value (GtkWidget *widget,
       else
         diff = x - private->start_x;
 
-      value = (private->start_value + diff * step);
+      if (log_mode)
+        {
+          gdouble a = log2 (upper) / upper;
+          gdouble d = diff * step * a;
+          value = private->start_value + d;
+        }
+      else
+        value = (private->start_value + diff * step);
     }
   else
     {
@@ -522,6 +536,9 @@ gimp_spin_scale_change_value (GtkWidget *widget,
       fraction = x / (gdouble) width;
 
       value = fraction * (upper - lower) + lower;
+
+      if (log_mode)
+        value = pow(2.0, value * (log2 (upper) / upper));
     }
 
   gtk_adjustment_set_value (adjustment, value);
@@ -648,6 +665,7 @@ gimp_spin_scale_value_changed (GtkSpinButton *spin_button)
   gdouble        lower;
   gdouble        upper;
   gdouble        value;
+  gboolean       log_mode;
 
   gimp_spin_scale_get_limits (GIMP_SPIN_SCALE (spin_button), &lower, &upper);
 
@@ -655,6 +673,15 @@ gimp_spin_scale_value_changed (GtkSpinButton *spin_button)
 
   gtk_entry_set_progress_fraction (GTK_ENTRY (spin_button),
                                    (value - lower) / (upper - lower));
+
+  log_mode = gimp_spin_scale_check_log_mode (GIMP_SPIN_SCALE (spin_button));
+
+  if (log_mode)
+    gtk_entry_set_progress_fraction (GTK_ENTRY (spin_button),
+                                     log2 (value) / log2 (upper));
+  else
+    gtk_entry_set_progress_fraction (GTK_ENTRY (spin_button),
+                                     (value - lower) / (upper - lower));
 }
 
 
@@ -735,3 +762,29 @@ gimp_spin_scale_get_scale_limits (GimpSpinScale *scale,
   return private->scale_limits_set;
 }
 
+void
+gimp_spin_scale_set_log_mode (GimpSpinScale *scale,
+                              gboolean      log_mode)
+{
+  GimpSpinScalePrivate *private;
+
+  g_return_if_fail (GIMP_IS_SPIN_SCALE (scale));
+
+  private = GET_PRIVATE (scale);
+
+  private->log_mode = log_mode;
+
+  gimp_spin_scale_value_changed (GTK_SPIN_BUTTON (scale));
+}
+
+gboolean
+gimp_spin_scale_check_log_mode (GimpSpinScale *scale)
+{
+  GimpSpinScalePrivate *private;
+
+  g_return_val_if_fail (GIMP_IS_SPIN_SCALE (scale), FALSE);
+
+  private = GET_PRIVATE (scale);
+
+  return private->log_mode;
+}
diff --git a/app/widgets/gimpspinscale.h b/app/widgets/gimpspinscale.h
index d896845..ddb07cc 100644
--- a/app/widgets/gimpspinscale.h
+++ b/app/widgets/gimpspinscale.h
@@ -58,5 +58,9 @@ gboolean    gimp_spin_scale_get_scale_limits   (GimpSpinScale *scale,
                                                 gdouble       *lower,
                                                 gdouble       *upper);
 
+void        gimp_spin_scale_set_log_mode       (GimpSpinScale *scale,
+                                                gboolean      log_mode);
+gboolean    gimp_spin_scale_check_log_mode     (GimpSpinScale *scale);
+
 
 #endif  /*  __GIMP_SPIN_SCALE_H__  */
